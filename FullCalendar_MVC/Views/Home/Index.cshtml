@model FullCalendar_MVC.Models.Eventos
@using FullCalendar_MVC.Models
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts{
    <script>
    $(document).ready(function() {
        var sourceFullView = { url: '/Home/GetDiaryEvents/' };
        var sourceSummaryView = { url: '/Home/GetDiarySummary' };
        var CalLoading = true;

        $('#calendar').fullCalendar({
            minTime: "06:00:00",
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,agendaWeek,agendaDay'
            },

            //weekends: false, Final de semana
            defaultView: 'agendaWeek',
            editable: true,
            allDaySlot: false,
            selectable: true,
            slotMinutes: 15,
            events: {
                url: 'Home/Eventos',
                data: function() {
                    return {
                        usuarioId: $('#profissionalM').val()
                    };
                }
            },

            eventClick: function(calEvent, jsEvent, view) {

                if (confirm("Deseja Excluir esta consulta?")) {
                    DeleteEvent(calEvent.ID, calEvent.start, calEvent.end);
                } else {
                    revertFunc();
                }
            },

            eventDrop: function(event, dayDelta, minuteDelta, allDay, revertFunc) {
                if (confirm("Confirm move?")) {
                    UpdateEvent(event.ID, event.start, event.end);

                } else {
                    revertFunc();
                }
            },

            eventResize: function(event, dayDelta, minuteDelta, revertFunc) {

                if (confirm("Confirm change appointment length?")) {
                    UpdateEvent(event.ID, event.start, event.end);
                } else {
                    revertFunc();
                }
            },

            dayClick: function(date, allDay, jsEvent, view) {
                $('#eventTitle').val("");
                $('#eventDate').val($.fullCalendar.formatDate(date, 'DD/MM/YYYY'));
                $('#eventTime').val($.fullCalendar.formatDate(date, 'HH:mm'));
                ShowEventPopup(date);
            },

            viewRender: function(view, element) {

                if (!CalLoading) {
                    if (view.name === 'month') {
                        $('#calendar').fullCalendar('removeEventSource', sourceFullView);
                        $('#calendar').fullCalendar('removeEvents');
                        $('#calendar').fullCalendar('addEventSource', sourceSummaryView);
                    } else {
                        $('#calendar').fullCalendar('removeEventSource', sourceSummaryView);
                        $('#calendar').fullCalendar('removeEvents');
                        $('#calendar').fullCalendar('addEventSource', sourceFullView);
                    }
                }
            }
        });
        CalLoading = false;
        });

        $('#btnPopupCancel').click(function () {
            ClearPopupFormValues();
            $('#popupEventForm').hide();
        });

        $('#btnPopupSave').click(function () {

            $('#popupEventForm').hide();

            var dataRow = {
                'titulo': $('#eventTitle').val(),
                'novaDataEvento': $('#eventDate').val(),
                'novaHoraEvento': $('#eventTime').val(),
                'novoDuracaoEvento': $('#eventDuration').val(),
                'profissional': $('#profissional').val()
            }

            ClearPopupFormValues();

            $.ajax({
                type: 'POST',
                url: "/Home/SaveEvent",
                data: dataRow,
                success: function (response) {
                    if (response === 'True') {
                        $('#calendar').fullCalendar('refetchEvents');
                        alert('New event saved!');
                        $('#popupEventForm').hide();
                    } else {
                        alert('Error, could not save event!');
                    }
                }
            });
        });

        //function ShowEventPopup(date) {
        //    ClearPopupFormValues();
        //    $('#popupEventForm').modal({
        //        show: true,
        //        focus: ('#eventTitle')
        //    });
        //}
        function ShowEventPopup(date) {
            ClearPopupFormValues();
            $('#popupEventForm').modal('show');
            $('#eventTitle').focus();
        }

        function ClearPopupFormValues() {
            $('#eventID').val("");
            $('#eventTitle').val("");
            $('#eventDateTime').val("");
            $('#eventDuration').val("");
        }

        function UpdateEvent(EventID, EventStart, EventEnd) {
            var dataRow = {
                'ID': EventID,
                'NewEventStart': EventStart,
                'NewEventEnd': EventEnd
            }
            $.ajax({
                type: 'POST',
                url: "/Home/AtualizarEvento",
                dataType: "json",
                contentType: "application/json",
                data: JSON.stringify(dataRow)
            });
        }

        function DeleteEvent(EventID, EventStart, EventEnd) {

            var dataRow = {
                'ID': EventID,
                'NewEventStart': EventStart,
                'NewEventEnd': EventEnd
            }

            $.ajax({
                type: 'POST',
                url: "/Home/DeletaEvento",
                dataType: "json",
                contentType: "application/json",
                data: JSON.stringify(dataRow)
            });
        }

        function ObterValorProfissional() {
            var nome = $('#profissional').val();

        }

        $('#profissionalM').change(function () {
            $('#calendar').fullCalendar('refetchEvents');
        });
    </script>
}


<div class="row" style="padding-top:20px;">

    <div class="col-md-2">
        @using (Html.BeginForm("Index", "Home"))
            {
        <div class="row">
            <h3 style="text-align: center;"> Pesquisa por Profissional</h3>

            <div class="form-group">
                <div class="col-md-10 col-md-offset-1">
                    @Html.DropDownListFor(model => model.ProfissionalId, ((IEnumerable<Profissional>)ViewBag.Profissionais).Select(option => new SelectListItem
               {
                   Text = option.Nome,
                   Value = option.ProfissionalId.ToString(),
                   Selected = (Model != null) && (option.ProfissionalId == Model.ProfissionalId)
               }), "Selecione", new { id = "profissionalM", @class = "form-control" })
                </div>
            </div>
        </div>
        }
    </div>

    <div class="col-md-9">
        <div id="calendar"></div>
    </div>
</div>


<div class="modal fade" id="popupEventForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Adicionar Evento</h4>
            </div>
            <div class="modal-body">


                @using (Html.BeginForm("SaveEvent", "Home", FormMethod.Get))
                {
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-6">
                            <label class="control-label">Nome Completo</label>
                            <input id="eventTitle" type="text" name="Titulo" class="form-control" />
                        </div>

                        <div class="col-md-6">
                            <label class="control-label">Data Evento</label>
                            <input id="eventDate" type="text" name="DataEvento" class="form-control" style="display:none" />
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-md-6">
                            <label class="control-label">Hora do Evento</label>
                            <input id="eventTime" type="text" name="HoraEvento" class="form-control" />
                        </div>

                        <div class="col-md-6">
                            <label class="control-label">Duração Evento</label>
                            <input type="text" name="DuracaoEvento" class="form-control" />
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">Profissional</label>
                        <div class="col-md-8">

                            @Html.DropDownListFor(model => model.ProfissionalId, ((IEnumerable<Profissional>)ViewBag.Profissionais).Select(option => new SelectListItem
                           {
                               Text = option.Nome,
                               Value = option.ProfissionalId.ToString(),
                               Selected = (Model != null) && (option.ProfissionalId == Model.ProfissionalId)
                           }), "Selecione", new { id = "profissional", @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group" style="padding-top:-20px;">
                        <div class="col-md-offset-4 col-md-8" style="padding-top:30px;">
                            <input type="submit" value="Pesquisar" class="btn btn-default" />
                        </div>
                    </div>
                </div>
                }
            </div>
        </div>
    </div>
</div>




<!--Modal para adicionar evento
<div class="modal fade" id="popupEventForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Adicionar Evento</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="form-group">
                            <div class="col-md-6">
                                <label class="control-label col-md-2">Cliente</label>
                                <input type="text" name="NomeCompleto" id="eventTitle" class="form-control" placeholder="Nome" />
                            </div>
                            <div class="col-md-6">
                                <label class="control-label col-md-2">Data</label>
                                <input type="date" name="DataConsulta" id="eventDate" class="form-control" />
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group">
                            <div class="col-md-6">
                                <label class="control-label col-md-2">HorahCliente</label>
                                <input type="text" name="HoraEvento" id="eventTime" class="form-control" />
                            </div>
                            <div class="col-md-6">
                                <label class="control-label col-md-2">Duração</label>
                                <input type="text" name="duracaoEvento" id="eventDuration" class="form-control" placeholder="30" />
                            </div>
                        </div>
                    </div>


                    <div class="row" style="padding-top:20px;">
                        <div class="form-group">
                            <label class="control-label col-md-2">Profissional</label>
                            <div class="col-md-8">

                                Html.DropDownListFor(model => model.ProfissionalId, ((IEnumerable<Profissional>)ViewBag.Profissionais).Select(option => new SelectListItem
                       {
                           Text = option.Nome,
                           Value = option.ProfissionalId.ToString(),
                           Selected = (Model != null) && (option.ProfissionalId == Model.ProfissionalId)
                       }), "Selecione", new { id = "profissional", class = "form-control" })
                            </div>
                        </div>
                    </div>


                </div>
                <div class="modal-footer" style="text-align:center;">
                    <button type="button" id="btnPopupCancel" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                    <button type="button" id="btnPopupSave" class="btn btn-primary">Salvar</button>
                </div>
            </div>
        </div>
    </div>-->
